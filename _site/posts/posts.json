[
  {
    "path": "posts/2022-04-18-takehome1/",
    "title": "Take-Home Exercise 1",
    "description": "Creating data visualisation beyond default: an analysis on the demographic of the city of Engagement, Ohio USA (VAST Challenge 2022).",
    "author": [
      {
        "name": "Leslie Long Nu",
        "url": "https://www.linkedin.com/in/leslielongnu/"
      }
    ],
    "date": "2022-04-24",
    "categories": [],
    "contents": "\n\nContents\n1. Overview\n1.1 Introduction\n1.2 Challenges and\nProposals\n\n2. Data Preparation\n2.1 Installation\nand Launching R Packages\n2.2 Import Datasets\n2.3 Data Wrangling\n2.4 Save as and Read RDS\n\n3. Visualizations and\nInsights\n3.1 Age Distribution of\nthe Residents\n3.2 Household Size of the\nResidents\n3.3 Education Level\nDistribution\n3.4 Age\nDistribution for Different Household Sizes\n3.5\nDistribution of Residents’ Interest Groups and Education Levels\n3.6\nJoviality Distribution for Different Interest Groups\n3.7 Joviality versus\nMonthly Income\n3.8 Income\nDistribution Faceted by Education Level\n\n4. Learning Points\n\n1. Overview\n1.1 Introduction\nIn this take-home exercise, the demographic of the city of\nEngagement, Ohio USA will be revealed by applying the skills learnt in\nISSS608 Visual Analytics Lesson 1 and Hands-on Exercise 1. It is assumed\nthat the volunteer participants are representative of the city’s\npopulation.\nThe data used in this exercise is from VAST Challenge 2022,\nand processed by RStudio tidyverse family of packages and\nvisualized by ggplot2 and its extensions.\n1.2 Challenges and Proposals\nChallenge 1: Locate and Prepare Relevant Data\nOne of the challenges faced in this take-home exercise is that the\ndataset from VAST Challenge 2022 includes a considerable large number of\nfiles, 88 in total, and it is challenging to locate all the demographic\nrelated data. Upon review, while the participant file contains the\nessential data on demographic of the city, such as age, education level,\nfamily size and so on, it does not provide any data on residents’ income\nlevel.\nTo include income information into the demographic reveal, data\nwrangling is required to derive income data, either from the status logs\nfiles -> job ID -> jobs file -> hourly rate; or from the\nfinancial journal -> wage. Considering that, although working days\nand hours are provided in jobs file, no information on public holidays,\nvocations taken or leaves applied are provided, which could affect the\nultimate income as job pay is given in hourly rate instead of monthly\nlump sump. Therefore, income data will be derived from financial journal\n-> wage as it represents the actual income received by the\nresidents.\nChallenge 2: Outliers\nFrom the financial journal, it is observed that the wage values range\nwidely. Thus, derived monthly income is likely to have outliers.\nOutliers affect the clarity and effectiveness of distribution graphs,\nsuch as scatter plots and boxplots, as the size of majority of the\ndistribution becomes trivial visually in the attempt to fit the outliers\non the graph.\nIn order to eliminate this problem, data should either be transformed\nand plotted in percentiles, or the type of the plot must be chosen\ncarefully.\nChallenge 3: Variable Preparation\nThe variables need to be prepared and checked properly for\nvisualization. For example, the age variable should be binned by\nintervals, such as below 20, 20-24, …, to allow for a more holistic\nunderstanding of the demographic representation. Another example is the\neducation level variable, as it is in character format, when plotted the\nlevels will be arranged alphabetically, first ‘Bachelor’, followed by\n‘Graduate’, ‘High School or College’ and ‘Low’, which is not the logical\norder that we are used to perceive education level. For issues like\nthis, manual adjustment using R code is required to produce a clear and\ncomprehensive graph.\nChallenge 4: Large Raw Data File\nThe financial journal file used to derive income data is 80.7 MB,\nlarger than the 50 MB size limit set by GitHub. Therefore, the raw data\ncannot be pushed to GitHub repository directly.\nThis is resolved by preparing the dataframe for visualization, and\nthen saving it in RDS format. The raw data is not pushed or commited\nwhile only the saved RDS file is referenced for visualization, and\npushed to GitHub repository.\n2. Data Preparation\n2.1 Installation and\nLaunching R Packages\nThe following code chunk installs the required R packages and loads\nthem onto RStudio environment.\n\n\npackages = c('tidyverse', 'readr', 'knitr', 'dplyr', 'ggdist', 'ggplot2', 'scales',\n             'forcats', 'grid', 'gridExtra', 'formattable', 'patchwork', 'ggridges')\nfor(p in packages){\n  if(!require(p, character.only = T)){\n    install.packages(p)\n  }\n  library(p, character.only = T)\n}\n\n\n\n2.2 Import Datasets\nThe datasets used for this exercise are provided by VAST Challenge 2022.\nData is imported using read_csv() of readr package, which\nis useful for reading delimited files into tibbles.\n\n\nparticipants <- read_csv('rawdata/Participants.csv')\nfinancial <- read_csv('rawdata/FinancialJournal.csv')\n\n\n\nThe following code chunk is used to have an overview of the\ndatasets.\n\n\nsummary(participants)\nsummary(financial)\n\n\n\n2.3 Data Wrangling\nTo find out the income level of the residents, residents’ monthly\nincome is derived by calculating the total sum of wage divided by 15.\nThe result is the average (mean) monthly income received by the\nresidents as the data ranges for 15 months.\n\n\nincome <- financial %>% \n  filter(category == 'Wage') %>% # extract only wage data\n  select(participantId, amount) %>% # extract participant ID and amount columns\n  group_by(participantId) %>% # group by participant ID\n  summarise(Monthly_Income = sum(amount)/15) \n# calculate average monthly income for each participant\n\n# check the derived file income \nsummary(income)\n\n\n\nIt is observed from summary(income) that the monthly\nincome’s variance is very high as it ranges from min value of 139.9 to\nmax value of 17369.0. It has outliers too as the mean and median values\nare 3328.3 and 3668.5 respectively. This indicates that we need to\nchoose an appropriate form of data visualization, or transform the data\ninto percentiles so that the plot is not distorted by the outliers.\nIncome file is joined with participants file based on participant ID to\nallow for comparison of all demographic variables. Inner join is used as\nboth data contain exactly 1011 entries and unique identifier of\nparticipant ID ranging from 0 to 1010.\n\n\nparticipants <- inner_join(x= participants, y= income, by= 'participantId')\n\n# confirm tables are joined correctly\nhead(participants)\n\n\n\nThe columns and values of participants file are renamed with below\ncode chunk for better formatting and ease of reading.\n\n\n# rename columns\nparticipants <- participants %>%\n  rename('Participant_ID' = 'participantId', \n         'Household_Size' = 'householdSize', \n         'Have_Kids' = 'haveKids', \n         'Age' = 'age', \n         'Education_Level' = 'educationLevel', \n         'Interest_Group' = 'interestGroup', \n         'Joviality' = 'joviality')\n\n# verify if the columns have been renamed correctly \ncolnames(participants)\n\n#rename value \nparticipants$Education_Level <- sub('HighSchoolOrCollege', \n                                    'High School or College',\n                                    participants$Education_Level)\n\n\n\nAge variable is binned with the following code chunk:\n\n\n# check min and max ages \nsummary(participants$Age)\n\n# binning\n\nbrks <- c(17, 20, 25, 30, 35, 40, 45, 50, 55, 60)\ngrps <- c('20 & Below', '21-25', '26-30', '31-35', '36-40', '41-45', \n          '46-50', '51-55', '56-60')\n\nparticipants$Age_Group <- cut(participants$Age, breaks=brks, labels = grps)\n\n\n\n2.4 Save as and Read RDS\nDataframe participants is saved and read in RDS format to avoid\nuploading large files to Git.\n\n\nsaveRDS(participants, 'data/participants.rds')\n\n\n\n\n\nparticipants <- readRDS('data/participants.rds')\nhead(participants)\n\n\n# A tibble: 6 × 9\n  Participant_ID Household_Size Have_Kids   Age Education_Level       \n           <dbl>          <dbl> <lgl>     <dbl> <chr>                 \n1              0              3 TRUE         36 High School or College\n2              1              3 TRUE         25 High School or College\n3              2              3 TRUE         35 High School or College\n4              3              3 TRUE         21 High School or College\n5              4              3 TRUE         43 Bachelors             \n6              5              3 TRUE         32 High School or College\n# … with 4 more variables: Interest_Group <chr>, Joviality <dbl>,\n#   Monthly_Income <dbl>, Age_Group <fct>\n\n3. Visualizations and Insights\n3.1 Age Distribution of the\nResidents\nA bar chart was plotted using ggplot2 on residents’ age\ngroups distribution as follows:\ngeom_text() is used to add annotations of the count and\n% values of each age group\ntheme() is used to remove the x axis ticks as it is\ncategorical scale.\nGrids and background color are removed for a cleaner look as\nannotations are included.\nFrom the bar chart it is observed that residents’ age distribution is\nmostly even, with 20 & Below as the smallest group (7.1%).\n\n\nggplot(data= participants, \n       aes(x= Age_Group)) +\n  geom_bar(fill= '#468499') +\n  ylim(0, 150) +\n  geom_text(stat = 'count',\n           aes(label= paste0(stat(count), ', ', \n                             round(stat(count)/sum(stat(count))*100, \n                             1), '%')), vjust= -0.5, size= 2.5) +\n  labs(y= 'No. of\\nResidents', title = \"Distribution of Residents' Age\") +\n  theme(axis.title.y= element_text(angle=0), axis.ticks.x= element_blank(),\n        panel.background= element_blank(), axis.line= element_line(color= 'grey'))\n\n\n\n\n3.2 Household Size of the\nResidents\nThe bar chart of household size indicates that there are no single\nparent households in the city, as all households of size 2 have no\nkids.\n\n\nggplot(data= participants,\n       aes(x= Household_Size,\n           fill = Have_Kids)) +\n  geom_bar()+\n  ylim(0, 400) +\n  geom_text(stat = 'count',\n           aes(label= stat(count)), \n           vjust= -0.5, \n           size= 3) +\n  labs(title = 'Household Size of the Residents', y= 'No of\\nResidents') +\n  theme(axis.title.y= element_text(angle=0), \n        axis.ticks.x= element_blank(),\n        panel.background= element_blank(), \n        axis.line= element_line(color= 'grey'))\n\n\n\n\n3.3 Education Level\nDistribution\nDistribution of residents’ education level shows that more than half\nof the residents are high school or college educated, followed by\nbachelors, graduate and lastly low education levels.\n\n\nparticipants %>%\n  mutate(Education= fct_infreq(Education_Level)) %>%\n  ggplot(aes(x= Education)) +\n  geom_bar(fill= '#6897bb') +\n  geom_text(stat = 'count',\n           aes(label= paste0(stat(count), ', ', \n                             round(stat(count)/sum(stat(count))*100, \n                             1), '%')), vjust= -0.5, size= 3) +\n  labs(y= 'No. of\\nResidents', title = \"Distribution of Residents' Education Level\") +\n  theme(axis.title.y= element_text(angle=0), axis.ticks.x= element_blank(),\n        panel.background= element_blank(), axis.line= element_line(color= 'grey'))\n\n\n\n\n3.4 Age\nDistribution for Different Household Sizes\nVolin and boxplot of age distribution for different household sizes\nare plotted as follows:\nscale= 'count' is used for geom_voilin()\nas it gives a true representation of the distribution because areas are\nscaled proportionally to the number of observations.\nmean age for each household size is added to compare with median age\nshown in boxplot\nas.factor(Household_Size) is used as household size is\ncategorical\n\n\nEduLevels <- c('Low', 'High School or College', 'Bachelors', 'Graduate')\n\nggplot(data=participants,\n       aes(x= as.factor(Household_Size), y= Age)) +\n  geom_violin(fill= '#66cdaa',\n              scale = 'count',\n              color= NA,\n              bw= 0.4) +\n  geom_boxplot(width= 0.2,\n               color = '#065535',\n               alpha= 0.3) +\n  stat_summary(geom= 'point',\n               fun= 'mean',\n               color= '#ff7373',\n               size= 2) + \n  facet_grid(~factor(Education_Level, levels = EduLevels)) +\n  labs(title= 'Age Distribution for Different Household Sizes', \n       x= 'Household Size') +\n  theme(panel.background = element_blank(),\n        axis.ticks.x = element_blank(),\n        axis.line= element_line(color= 'grey'),\n        panel.grid.major.y = element_line(color= 'grey', size = 0.1))\n\n\n\n\nFrom the plot it can be observed:\nHighest average age is in household size 2 for low education\ngroup.\nHighest average age is in household size 1 for high school or\ncollege education group.\nHighest average age is in household size 2 for Low education\ngroup.\nAge distribution for households are similar across different sizes\nfor bachelors and graduate education group.\n3.5\nDistribution of Residents’ Interest Groups and Education Levels\nThe distribution of both residents’ interest groups and education\nlevels are plotted as follows:\npatchwork is used to stack two graphs together, one\nshowing the total size of the interest groups, another showing the\ncorresponding composition of education levels.\nInterest groups (x axis) are ordered by number of residents in\ndescending order\nx-axis label for the first graph is removed to avoid\nredundancy.\n\n\n# plot p1: bar chart of interest group distribution in descending order\nnumber <- \n  participants %>%\n  mutate(Interest= fct_infreq(Interest_Group)) \n\np1 <-  \n  ggplot(data= number, aes(x= Interest)) +\n  geom_bar(fill= '#468499') +\n  scale_y_continuous(expand = c(0.2, 0.2)) +\n  labs(y= 'No. of\\nResidents', \n       title = \"Total Number of Residents in Interest Groups\") +\n  theme(axis.title.y= element_text(angle=0), axis.ticks.x= element_blank(),\n        panel.background= element_blank(), axis.line= element_line(color= 'grey'),\n        panel.grid.major.y = element_line(size= 0.2, color = \"grey\"),\n        axis.title.x = element_blank(),\n        plot.title = element_text(hjust=0.5))\n\n# plot p2: composition of corresponding interest group in terms of education levels\nint_lvl <- c('J', 'H', 'G', 'F', 'A', 'C', 'D', 'I', 'B', 'E')\npercent <- \n  participants %>% \n  group_by(Interest_Group, Education_Level) %>%\n  summarise(edu_size= n()) %>%\n  mutate(edu_pct= percent(edu_size/sum(edu_size))) \n \np2<- \n  ggplot(data= percent, \n         aes(x= factor(Interest_Group, levels = int_lvl), y= edu_pct, \n             group= Education_Level, \n             color= factor(Education_Level, levels = EduLevels))) +\n  geom_line() +\n  scale_color_discrete(name= 'Education Level') +\n  scale_y_continuous(labels = percent_format(),\n                     expand = c(0.2, 0.2)) +\n  labs(y= 'Percent', x= 'Interest Group', \n       title = \"Composition of Residents' Education Level in Interest Groups\")+\n  theme(legend.position = 'top', legend.direction = 'horizontal',\n        axis.title.y= element_text(angle=0), axis.ticks.x= element_blank(),\n        panel.background= element_blank(), axis.line= element_line(color= 'grey'),\n        panel.grid.major = element_line(size= 0.2, color = \"grey\"),\n        legend.key = element_rect(fill= NA), legend.title = element_text(size = 8.5),\n        plot.title = element_text(hjust=0.5))\n\n# use patchwork to stack 2 graphs \np1/p2\n\n\n\n\nDistribution of residents’ interest groups shows that residents’\ninterests are fairly evenly distributed among the 10 interest groups,\nwith group J having the largest size, 116 residents and group E having\nthe smallest size, 83 residents. The education level composition of the\ninterest groups indicates:\nThe most popular interest group among high school or college\neducation is group F and A.\nThe most popular interest group among bachelors is group J and H\nfollowed closely by D.\nThe most popular interest group among graduates is group G.\nThe least popular interest group among low education level is group\nD.\n3.6\nJoviality Distribution for Different Interest Groups\nThe following plot is created to show the distribution of joviality\nindex for different interest groups using the half-eye plot. It\nindicates the density plot (grey shade above) as well as the medians\n(dots) and quantile intervals (line and shape below).\nIts is observed from the plot that interest group E has the highest\nmedian joviality index while interest group H has the lowest.\n\n\nggplot(participants, \n       aes(x= fct_rev(Interest_Group), y= Joviality)) +\n  stat_halfeye(adjust = .35,\n               width = .6,\n               color = '#20b2aa',\n               justification = -.15,\n               position = position_nudge(x = .12)) +\n  scale_x_discrete(expand= c(0.1, 0.1)) +\n  geom_hline(aes(yintercept = 0.5),\n             linetype= 'dashed',\n             color= '#f08080',\n             size= .6) +\n  coord_flip() +\n  labs(x = 'Interest Group',\n       title = 'Joviality Distribution in Different Interest Groups') +\n  theme(panel.background= element_blank(), axis.line= element_line(color= 'grey'),\n        axis.ticks.y = element_blank(),\n        panel.grid.major = element_line(size= 0.2, color = \"grey\"))\n\n\n\n\n3.7 Joviality versus Monthly\nIncome\nJoviality versus monthly income distribution is plotted with\nfollowing:\nHorizontal line of Joviality= 0.5 and vertical line of median income\nis added for ease of interpretation. Median income instead of mean\nincome is used as mean value is affected by outliers in income\ndata.\nScatter points are plotted in gradient color scheme based on\njoviality values. High joviality values are indicated in light green and\nlow joviality values are indicated in dark green.\n\n\nggplot(data= participants,\n       aes(x= Monthly_Income, y= Joviality, color= Joviality)) +\n  scale_color_gradient(low= '#133337', high = '#a0db8e') +\n  geom_point() +\n  scale_x_continuous(breaks= c(0,5000,10000,15000),\n                     labels = c('0', '5k', '10k', '15k')) +\n  geom_vline(aes(xintercept = median(Monthly_Income,\n                                     na.rm = T)),\n             color= 'red',\n             linetype= 'dashed',\n             size= .6) +\n  geom_text(aes(median(Monthly_Income), 1, \n                label= 'Median Monthly Income', hjust= -0.1)) +\n  geom_hline(aes(yintercept = 0.5),\n             color= 'red',\n             linetype= 'dashed',\n             size= .6)+\n  labs(title = \"Joviality versus Monthly Income\")+\n  theme(panel.background= element_blank(), axis.line= element_line(color= 'grey'),\n        panel.grid.major = element_line(size= 0.2, color = \"grey\"))\n\n\n\n\nThis plot revealed that here is no positive correlation between\njoviality and income level. In fact, some residents have very high\njoviality index with low income, while majority of those with monthly\nincome higher than 10k have low joviality index.\n3.8 Income\nDistribution Faceted by Education Level\nThis plot is done with the following:\nIncome distribution for each education level is plotted against the\noverall income distribution in the background. This allows us to look at\nthe comparison of the overall trend versus that for each subset.\nMean and median monthly income lines are added to each facet.\n\n\n# prepare data for background fill\nd <- participants\nd_bg <- d[, -5]\n\n# prepare mean and median monthly income by different education levels\nmed_in <- participants %>%\n  group_by(Education_Level) %>%\n  summarise(med_in = median(Monthly_Income),\n            mean_in = mean(Monthly_Income))\n  \nggplot(data= d,\n       aes(x= Monthly_Income, fill= Education_Level)) +\n  geom_histogram(data= d_bg,\n                 fill= 'grey',\n                 alpha= .5) +\n  geom_histogram(color= 'black') +\n  geom_vline(data= med_in,\n             aes(xintercept = med_in, color= 'Median'),\n             linetype= 'dashed',\n             size= .4) +\n  geom_vline(data= med_in,\n             aes(xintercept = mean_in, color= 'Mean'),\n             linetype= 'dashed',\n             size= .4) +\n  scale_color_manual(name= 'Statistics', \n                     values = c(Median= 'dark blue', Mean= 'Red')) +\n  facet_wrap(~ factor(Education_Level, levels = EduLevels)) +\n  guides(fill= 'none') +\n  labs(y= 'No of Residents', \n       title = 'Monthly Income Distribution Faceted by Education Level') +\n  theme_bw()\n\n\n\n\nThis plot indicates, unsurprisingly, that the income distribution is\nhigher for higher education levels. In addition, it is worth noting\nthat, the mean value is higher than median for higher education levels,\nthe opposite case for low education level, and almost the same for high\nschool or college education.\n4. Learning Points\nThis take-home exercise provides an excellent opportunity to get\nfamiliarized with data preparation and data visualization using R\npackages, especially using tidyverse and\nggplot2 and their extensions. My key takeaways are:\nWhether using R or Tableau, variables must be prepared properly\nbefore clear and meaningful visualizations can be built upon. The\nprinciple of ‘Garbage in, garbage out.’ applies here as well. For\nexample, when exploring income distribution by different education\nlevels, income data must be grouped first by education levels to obtain\nthe mean and median income for each subset, to provide audience with a\nbetter interpretation.\nPlotting with ggplot2 in R is highly customizable as it\nis based on the grammar of graphics, which allows for numerous ways of\ngraphical composition as required. The more I used it, the more I\nunderstand systematically how complicated graphics can be constructed\nlayer by layer.\n\n\n\n",
    "preview": "posts/2022-04-18-takehome1/takehome1_files/figure-html5/age barchart-1.png",
    "last_modified": "2022-04-24T20:36:41+08:00",
    "input_file": "takehome1.knit.md"
  }
]
